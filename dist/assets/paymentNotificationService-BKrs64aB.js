import{j as o}from"./index-GcpNd-v9.js";class d{constructor(){this.webhookQueue=new Map}async processPaymentWebhook(t){try{if(console.log("Processing payment webhook:",t),!t.order_id||!t.amount)throw new Error("Webhook data incomplete: missing order_id or amount");const e=await this.getPaymentLinkByOrderId(t.order_id);if(!e)return console.warn(`Payment link not found for order_id: ${t.order_id}`),await this.saveWebhookLog(t,!1,"Payment link not found in database");await this.updatePaymentLinkStatus(e.id,{status:"completed",payment_method:t.payment_method,completed_at:t.completed_at||new Date().toISOString(),webhook_data:t});const n=await this.getStudentById(e.student_id);return n?(await this.createTransactionRecord({student_id:n.id,type:"income",amount:parseInt(t.amount),description:e.description||"Kas Kelas",payment_method:t.payment_method,order_id:t.order_id,status:"completed",completed_at:t.completed_at}),await this.sendPaymentSuccessNotification(n,e,t),await this.saveWebhookLog(t,!0,"Successfully processed and notification sent"),{success:!0,message:"Payment processed and notification sent",student:n,paymentData:e}):(console.warn(`Student not found for ID: ${e.student_id}`),await this.saveWebhookLog(t,!1,"Student not found"))}catch(e){throw console.error("Error processing payment webhook:",e),await this.saveWebhookLog(t,!1,e.message),e}}async sendPaymentSuccessNotification(t,e,n){try{console.log(`Sending payment success notification to ${t.name}`);const a=this.generatePaymentConfirmationMessage(t,e,n);console.log(`Would send payment confirmation to ${t.name}:`,a);const r={success:!0,messageId:`mock_${Date.now()}`};return console.log(`Payment confirmation sent to ${t.name}:`,r),r}catch(a){throw console.error(`Failed to send payment confirmation to ${t.name}:`,a),a}}generatePaymentConfirmationMessage(t,e,n){const r=new Date(n.completed_at||Date.now()).toLocaleDateString("id-ID",{day:"numeric",month:"long",year:"numeric",hour:"2-digit",minute:"2-digit"}),s=new Date().toLocaleDateString("id-ID",{month:"long",year:"numeric"}),i=n.order_id.slice(-8).toUpperCase(),c=`${window.location.origin}/invoice?orderId=${n.order_id}`;return`âœ… *Pembayaran Berhasil Diterima*
SD Islam Al Husna

Terima kasih ${t.name} (${t.nickname})! ï¿½ï¿½ï¿½

ðŸ’° *Detail Pembayaran:*
â€¢ Jumlah: Rp ${parseInt(n.amount).toLocaleString("id-ID")}
â€¢ Tanggal: ${r}
â€¢ Metode: ${this.formatPaymentMethod(n.payment_method)}
â€¢ Ref: ${i}

ðŸ“‹ *Status Kas Terbaru:*
â€¢ Bulan: ${s}
â€¢ Status: LUNAS âœ…
â€¢ Keterangan: ${e.description||"Kas Kelas"}

ðŸ§¾ *Invoice Digital:*
${c}

ðŸŽ‰ Pembayaran Anda telah dikonfirmasi dan tercatat dalam sistem kas kelas.

Terima kasih atas kepercayaan dan kerjasamanya! ðŸ’™

_Konfirmasi Otomatis - Bendahara Kelas 1B_
_ðŸ’» Sistem Kas Digital SD Islam Al Husna_

ðŸ“± Butuh bantuan? Hubungi Bu Siti: 0812-xxxx-xxxx`}formatPaymentMethod(t){return t?{qris:"QRIS",bca:"Transfer BCA",mandiri:"Transfer Mandiri",bni:"Transfer BNI",bri:"Transfer BRI",gopay:"GoPay",ovo:"OVO",dana:"DANA",linkaja:"LinkAja"}[t.toLowerCase()]||t.toUpperCase():"Transfer Bank"}async getPaymentLinkByOrderId(t){try{const{data:e,error:n}=await o.getPaymentLinks?await o.getPaymentLinks():{data:[],error:null};if(!n&&e){const r=e.find(s=>s.order_id===t);if(r)return r}const a=localStorage.getItem("paymentLinks");return a?JSON.parse(a).find(s=>s.order_id===t):null}catch(e){return console.error("Error getting payment link:",e),null}}async getStudentById(t){try{const{data:e,error:n}=await o.getStudents();if(n)throw n;return e.find(a=>a.id===t)}catch(e){return console.error("Error getting student:",e),null}}async updatePaymentLinkStatus(t,e){try{const{data:n,error:a}=await o.updatePaymentLink?await o.updatePaymentLink(t,{...e,updated_at:new Date().toISOString()}):this.updatePaymentLinkInStorage(t,e);if(a)throw a;return n}catch(n){throw console.error("Error updating payment link:",n),n}}async createTransactionRecord(t){try{const e={...t,id:`txn_${Date.now()}_${Math.random().toString(36).substr(2,8)}`,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},{data:n,error:a}=await o.addTransaction?await o.addTransaction(e):this.saveTransactionToStorage(e);if(a)throw a;return n}catch(e){throw console.error("Error creating transaction:",e),e}}async saveWebhookLog(t,e=!1,n=""){try{const a={id:`log_${Date.now()}_${Math.random().toString(36).substr(2,8)}`,source:"pakasir",event_type:"payment_webhook",order_id:t.order_id,payload:t,processed:e,error_message:e?null:n,created_at:new Date().toISOString()},{data:r,error:s}=await o.addWebhookLog?await o.addWebhookLog(a):this.saveWebhookLogToStorage(a);return r}catch(a){return console.error("Error saving webhook log:",a),null}}async storePaymentLink(t){try{const e={id:t.id||`pl_${Date.now()}_${Math.random().toString(36).substr(2,8)}`,student_id:t.student_id,order_id:t.order_id,payment_url:t.payment_url,amount:parseInt(t.amount),description:t.description||"Kas Kelas",status:t.status||"pending",payment_method:t.payment_method||null,completed_at:t.completed_at||null,expires_at:t.expires_at||new Date(Date.now()+2592e6).toISOString(),campaign_id:t.campaign_id||null,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};console.log("Storing payment link:",e.order_id,"for student:",t.student_id);const{data:n,error:a}=await o.addPaymentLink?await o.addPaymentLink(e):this.storePaymentLinkToStorage(e);if(a)throw a;return console.log("Payment link stored successfully:",e.order_id),n}catch(e){throw console.error("Error storing payment link:",e),e}}updatePaymentLinkInStorage(t,e){try{const n=localStorage.getItem("paymentLinks");if(n){const a=JSON.parse(n),r=a.findIndex(s=>s.id===t);r!==-1&&(a[r]={...a[r],...e},localStorage.setItem("paymentLinks",JSON.stringify(a)))}return{data:e,error:null}}catch(n){return{data:null,error:n}}}saveTransactionToStorage(t){try{const e=localStorage.getItem("transactions"),n=e?JSON.parse(e):[];return n.push(t),localStorage.setItem("transactions",JSON.stringify(n)),{data:t,error:null}}catch(e){return{data:null,error:e}}}saveWebhookLogToStorage(t){try{const e=localStorage.getItem("webhookLogs"),n=e?JSON.parse(e):[];return n.push(t),localStorage.setItem("webhookLogs",JSON.stringify(n)),{data:t,error:null}}catch(e){return{data:null,error:e}}}storePaymentLinkToStorage(t){try{const e=localStorage.getItem("paymentLinks"),n=e?JSON.parse(e):[];return n.push(t),localStorage.setItem("paymentLinks",JSON.stringify(n)),{data:t,error:null}}catch(e){return{data:null,error:e}}}async testPaymentNotification(t,e=5e4){try{const n=await this.getStudentById(t);if(!n)throw new Error("Student not found");const a={description:"Test Payment - Kas Kelas",amount:e},r={order_id:`TEST${Date.now()}`,amount:e,payment_method:"qris",completed_at:new Date().toISOString()};return await this.sendPaymentSuccessNotification(n,a,r),{success:!0,message:`Test notification sent to ${n.name}`}}catch(n){throw console.error("Error sending test notification:",n),n}}async getPaymentStatistics(){try{const{data:t}=await o.getPaymentLinks?await o.getPaymentLinks():{data:JSON.parse(localStorage.getItem("paymentLinks")||"[]")},{data:e}=await o.getTransactions?await o.getTransactions():{data:JSON.parse(localStorage.getItem("transactions")||"[]")};return{totalLinks:t.length,completedPayments:t.filter(a=>a.status==="completed").length,pendingPayments:t.filter(a=>a.status==="pending").length,totalRevenue:e.filter(a=>a.type==="income"&&a.status==="completed").reduce((a,r)=>a+r.amount,0),conversionRate:t.length>0?(t.filter(a=>a.status==="completed").length/t.length*100).toFixed(2):0}}catch(t){return console.error("Error getting payment statistics:",t),{totalLinks:0,completedPayments:0,pendingPayments:0,totalRevenue:0,conversionRate:0}}}async sendBulkPaymentNotifications(t){const e=[];for(const n of t)try{const a=await this.getPaymentLinkByOrderId(n);if(a&&a.status==="completed"){const r=await this.getStudentById(a.student_id),s={order_id:n,amount:a.amount,payment_method:"manual",completed_at:a.completed_at||new Date().toISOString()};await this.sendPaymentSuccessNotification(r,a,s),e.push({orderId:n,student:r.name,success:!0})}}catch(a){e.push({orderId:n,success:!1,error:a.message})}return e}}const u=new d;export{u as p};
